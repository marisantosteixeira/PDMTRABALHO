{
  "version": 3,
  "sources": ["../../workbox-core/_private/cacheNames.js", "../../workbox-core/models/quotaErrorCallbacks.js"],
  "sourcesContent": ["/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst _cacheNameDetails = {\r\n    googleAnalytics: 'googleAnalytics',\r\n    precache: 'precache-v2',\r\n    prefix: 'workbox',\r\n    runtime: 'runtime',\r\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\r\n};\r\nconst _createCacheName = (cacheName) => {\r\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\r\n        .filter((value) => value && value.length > 0)\r\n        .join('-');\r\n};\r\nconst eachCacheNameDetail = (fn) => {\r\n    for (const key of Object.keys(_cacheNameDetails)) {\r\n        fn(key);\r\n    }\r\n};\r\nexport const cacheNames = {\r\n    updateDetails: (details) => {\r\n        eachCacheNameDetail((key) => {\r\n            if (typeof details[key] === 'string') {\r\n                _cacheNameDetails[key] = details[key];\r\n            }\r\n        });\r\n    },\r\n    getGoogleAnalyticsName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\r\n    },\r\n    getPrecacheName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\r\n    },\r\n    getPrefix: () => {\r\n        return _cacheNameDetails.prefix;\r\n    },\r\n    getRuntimeName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\r\n    },\r\n    getSuffix: () => {\r\n        return _cacheNameDetails.suffix;\r\n    },\r\n};\r\n", "/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n// Callbacks to be executed whenever there's a quota error.\r\n// Can't change Function type right now.\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nconst quotaErrorCallbacks = new Set();\r\nexport { quotaErrorCallbacks };\r\n"],
  "mappings": ";AAQA,IAAM,oBAAoB;AAAA,EACtB,iBAAiB;AAAA,EACjB,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,QAAQ,OAAO,iBAAiB,cAAc,aAAa,QAAQ;AACvE;AACA,IAAM,mBAAmB,CAAC,cAAc;AACpC,SAAO,CAAC,kBAAkB,QAAQ,WAAW,kBAAkB,MAAM,EAChE,OAAO,CAAC,UAAU,SAAS,MAAM,SAAS,CAAC,EAC3C,KAAK,GAAG;AACjB;AACA,IAAM,sBAAsB,CAAC,OAAO;AAChC,aAAW,OAAO,OAAO,KAAK,iBAAiB,GAAG;AAC9C,OAAG,GAAG;AAAA,EACV;AACJ;AACO,IAAM,aAAa;AAAA,EACtB,eAAe,CAAC,YAAY;AACxB,wBAAoB,CAAC,QAAQ;AACzB,UAAI,OAAO,QAAQ,GAAG,MAAM,UAAU;AAClC,0BAAkB,GAAG,IAAI,QAAQ,GAAG;AAAA,MACxC;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,wBAAwB,CAAC,kBAAkB;AACvC,WAAO,iBAAiB,iBAAiB,kBAAkB,eAAe;AAAA,EAC9E;AAAA,EACA,iBAAiB,CAAC,kBAAkB;AAChC,WAAO,iBAAiB,iBAAiB,kBAAkB,QAAQ;AAAA,EACvE;AAAA,EACA,WAAW,MAAM;AACb,WAAO,kBAAkB;AAAA,EAC7B;AAAA,EACA,gBAAgB,CAAC,kBAAkB;AAC/B,WAAO,iBAAiB,iBAAiB,kBAAkB,OAAO;AAAA,EACtE;AAAA,EACA,WAAW,MAAM;AACb,WAAO,kBAAkB;AAAA,EAC7B;AACJ;;;ACrCA,IAAM,sBAAsB,oBAAI,IAAI;",
  "names": []
}
